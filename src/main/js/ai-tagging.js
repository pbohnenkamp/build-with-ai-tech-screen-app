const Anthropic = require("@anthropic-ai/sdk");
const { filterTechnologies } = require("./blacklist-filter");

const anthropic = new Anthropic({
  apiKey: process.env.ANTHROPIC_API_KEY,
});

/**
 * Get technologies from job description using an AI Prompt
 * @param {string} jobDescription - The job description to get technologies from
 * @param {object} [augmentationInput={}] - Object to hold any additional input for dynamically augmenting the prompt
 * @param {object} [promptOptions={}] - Object to hold any options to control the behavior prompt, e.g. caching enabled, etc.
 * @returns {Promise<string[]>} - The technologies found in the job description
 */
const getTagsFromJobDescription = async (
  jobDescription,
  augmentationInput = {},
  promptOptions = {}
) => {
  const prompt = buildUserPrompt(
    jobDescription,
    augmentationInput.existingTechnologies ?? []
  );
  const useCache = promptOptions.cacheEnabled ?? false;
  const msg = await anthropic.messages.create({
    model: "claude-3-7-sonnet-20250219",
    max_tokens: 2048,
    temperature: 0.1,
    messages: [
      {
        role: "user",
        content: [
          {
            type: "text",
            text: '<examples>\n<example>\n<jobDescription>\nCan you also assess his Content Management System experience too please?\nSoftware Engineer (Java & React Full Stack)\n\nClient:  Tech Healthcare\n\nDuration:  Through 12/31/2025 with potential for extension or conversion\n\n \n\nOur healthcare client is seeking a full-time Software Engineer to join their growing team on a long-term (12+ month) consulting basis, with a strong potential of extension or conversion to a full-time employee in the future.  This critical role and force multiplier, the Software Engineer is an integral member of the team responsible for designing and delivering solutions in our client\'s software applications to support the organization\'s mission and goals.\n\n \n\nKey Responsibilities:\n\nParticipate in software delivery as a hands-on engineer by designing, building testing and maintaining technical solutions for the company.\nCollaborate on innovative solutions to challenging technical problems by optimizing code, improving performance, or resolving critical technical issues.\nParticipate in code reviews to ensure code quality, maintainability, and adherence to best practices.\nCollaborate with cross-functional teams, including product managers, designers, and stakeholders, to ensure that technical solutions align with the overall product and business goals.\nContribute technical documentation to ensure that the codebase and architecture are well-documented for current and future team members.\nEmbody the values of Trust, Collaboration, Accountability, Customer Success, Innovation, and Respect\nRequirements:\n\nBachelor\'s degree in computer science, management information systems, or a closely-related field is preferred\nMinimum of 5 years of experience in software engineering is preferred\nExperience with React, Java, Node.js, JavaScript and PostgreSQL is preferred\nExperience with Next.js and Nx is a plus\nExperience with Web API\nDemonstrated experience with cloud services (e.g. Amazon AWS Lambda) and related infrastructure, RESTful APIs and data pipelines\nProficiency in agile development methodologies, SDLC tooling and DevOps\nAbility to thrive in a fast-paced environment\nExperience in healthcare or digital health is a plus\n \n\nNote from Ellen from this week: \n\n \n\nI spoke with the team yesterday and we were wondering if lowering the priority of the NextJS requirement to "nice to have" and instead focusing on React/CSS/UX/Testing would broaden the candidate pool.\n\n \n\nMore specifically, we can stick with the same high level job description which targets senior to mid-level product engineering "generalists". However for the next member to add to our team, we would like to favor candidates with the following in priority order:\n\nStrong React Experience (including client-side rendering and server-side rendering)\nStrong CSS and UI component library experience\nExperience with front end unit and end-to-end testing (Vitest and Playwright a plus)\nExperience implementing UIs from wireframes and visual designs\nWillingness to build expertise in NextJS (previous experience a plus)\nWillingness to aid in the curation of test data\nWillingness to contribute to Spring Boot backend (Per above, Java 8+ & Spring Boot still a required)\nAgain, the hope here with this adjustment is that this broadens your candidate search a bit more by not focusing too much on NextJS. I know you said it has been challenging to find folks with NextJS. Let me know what you think and if you have any questions.\n</jobDescription>\n<existing-technologies>\nReact\nNode.js\nJavaScript\nSQL\nNext.js\nNx\nJava\nAWS\nREST APIs\nDevOps\nData Pipelines\n.NET\nC\nT-SQL\nMicrosoft Azure\nAzure Functions\nAzure Logic Apps\nETL\nTest Driven Development\nBehavioral Driven Development\nEntity Framework\nORM\nSSIS\nPostgreSQL\nAWS Lambda\nAWS Cognito\nAWS CloudWatch\nAWS Aurora\nAWS Bedrock\nAWS VPC\nAWS CloudFormation\nAngular\nPython\nGitHub Actions\nTest Automation\nTest Data Management\nPytest\nUnit Testing\nIntegration Testing\nSystem Testing\nPerformance Testing\nAPI Testing\nMSTest\nMocks\nVisual Studio\nVS Code\nTypeScript\nMVC\nCA Autosys\nMachine Learning\nLow Code\nAppian\nBusiness Process Automation\nRedux\nObject Oriented\nCSS\nDocker\nKubernetes\nGraphQL\nOptimizely\nContent Management Systems\nDomain Data Modeling\nLinux RPM Packaging\nShell Scripting\nLinux\nVirtual Machines\nContainers\nCyber Security\nSUSE Linux\nReact Native\nSystem Architecture\nASP.NET\nPower Platform\nDataverse\nDynamics\nPower BI\nPower Apps\nPower Automate\nSSRS\nOAuth 2.0\nAlteryx\nPowerShell\nSharePoint\nAzure DevOps\nOracle ERP\nVue\nAndroid\nSDKs\nOpenCL\nKernel Programming\nGPU Algorithm Design\nGPU Algorithm Testing\nDesign Patterns\nCUDA\nMagnolia CMS\nAdobe Experience Manager\nPostCSS\nSASS\nTailwind\nSpring Boot\nSpring\nJava EE\nInfrastructure as Code\nData Distribution Services (DDS)\nNetwork Sniffing\nService Oriented Architecture\nMicroservices\nStored Procedures\nIndexes\nTriggers\nGPU Programming\nAlgorithms\nAuthentication\nAuthorization\nCaching\nEncryption\nResponsive Design\nDomain Driven Design\nGCP\n</existing-technologies>\n<ideal_output>\n<technology_analysis>\n1. Relevant quotes from the job description:\n   - "Software Engineer (Java & React Full Stack)"\n   - "Experience with React, Java, Node.js, JavaScript and PostgreSQL is preferred"\n   - "Experience with Next.js and Nx is a plus"\n   - "Experience with Web API"\n   - "Demonstrated experience with cloud services (e.g. Amazon AWS Lambda) and related infrastructure, RESTful APIs and data pipelines"\n   - "Proficiency in agile development methodologies, SDLC tooling and DevOps"\n   - "Strong React Experience (including client-side rendering and server-side rendering)"\n   - "Strong CSS and UI component library experience"\n   - "Experience with front end unit and end-to-end testing (Vitest and Playwright a plus)"\n   - "Willingness to contribute to Spring Boot backend (Per above, Java 8+ & Spring Boot still a required)"\n\n2. Explicitly mentioned technologies:\n   React, Java, Node.js, JavaScript, PostgreSQL, Next.js, Nx, Web API, AWS Lambda, RESTful APIs, Agile, DevOps, CSS, UI component libraries, Vitest, Playwright, Spring Boot\n\n3. Implied technologies:\n   SQL (for PostgreSQL), AWS (for AWS Lambda), Spring (as Spring Boot is mentioned)\n\n4. Standardized technology names:\n   React, Node.js, JavaScript, SQL, Java, AWS, REST APIs, Web APIs, AWS Lambda, Agile, DevOps, Next.js\n\n5. Prioritizing technologies based on importance:\n   The job description and the note from Ellen provide a clear priority order. We\'ll focus on the most important technologies and limit the list to keep it focused.\n\n6. Review and finalization:\n   We\'ll include the core technologies mentioned as requirements and prioritize based on the note from Ellen. We\'ll exclude some of the less prominent or implied technologies to keep the list focused.\n</technology_analysis>\n\n[\n  "React",\n  "Java",\n  "JavaScript",\n  "CSS",\n  "Spring Boot",\n  "SQL",\n  "REST APIs",\n  "Node.js",\n  "Web APIs",\n  "Agile",\n  "DevOps"\n]\n</ideal_output>\n</example>\n<example>\n<existing-technologies>\nReact\nNode.js\nJavaScript\nSQL\nNext.js\nNx\nJava\nAWS\nREST APIs\nDevOps\nData Pipelines\n.NET\nC\nT-SQL\nMicrosoft Azure\nAzure Functions\nAzure Logic Apps\nETL\nTest Driven Development\nBehavioral Driven Development\nEntity Framework\nORM\nSSIS\nPostgreSQL\nAWS Lambda\nAWS Cognito\nAWS CloudWatch\nAWS Aurora\nAWS Bedrock\nAWS VPC\nAWS CloudFormation\nAngular\nPython\nGitHub Actions\nTest Automation\nTest Data Management\nPytest\nUnit Testing\nIntegration Testing\nSystem Testing\nPerformance Testing\nAPI Testing\nMSTest\nMocks\nVisual Studio\nVS Code\nTypeScript\nMVC\nCA Autosys\nMachine Learning\nLow Code\nAppian\nBusiness Process Automation\nRedux\nObject Oriented\nCSS\nDocker\nKubernetes\nGraphQL\nOptimizely\nContent Management Systems\nDomain Data Modeling\nLinux RPM Packaging\nShell Scripting\nLinux\nVirtual Machines\nContainers\nCyber Security\nSUSE Linux\nReact Native\nSystem Architecture\nASP.NET\nPower Platform\nDataverse\nDynamics\nPower BI\nPower Apps\nPower Automate\nSSRS\nOAuth 2.0\nAlteryx\nPowerShell\nSharePoint\nAzure DevOps\nOracle ERP\nVue\nAndroid\nSDKs\nOpenCL\nKernel Programming\nGPU Algorithm Design\nGPU Algorithm Testing\nDesign Patterns\nCUDA\nMagnolia CMS\nAdobe Experience Manager\nPostCSS\nSASS\nTailwind\nSpring Boot\nSpring\nJava EE\nInfrastructure as Code\nData Distribution Services (DDS)\nNetwork Sniffing\nService Oriented Architecture\nMicroservices\nStored Procedures\nIndexes\nTriggers\nGPU Programming\nAlgorithms\nAuthentication\nAuthorization\nCaching\nEncryption\nResponsive Design\nDomain Driven Design\nGCP\n</existing-technologies>\n<jobDescription>\n.Net mid-to-sr. level experience.\\nCandidate Profile: Experience designing and implementing complex systems .NET Generalist with strong preference for experience writing/using web services.\\nSolid understanding on Mircosoft Azure, especially Logics Apps and Functions\\nPreferred: C#, T-SQL, Web API, SSIS, Git\\nExperience with ETL\\nStrong SQL skills\\nExperience with Test Driven Development\\nExperience in Web development\\nExposure to Entity Framework or other ORM\\nQualities Needed: Good communicator who wants to work in a team environment, comfortable performing pair programming\\nAnalytical – not afraid to dive into complex code and data to troubleshoot issues\\nCreative problem solver who is automation focused. Comfortable working in an agile environment. Prefer experience working in agile\n</jobDescription>\n<ideal_output>\n[\n    ".NET",\n    "C#",\n    "T-SQL",\n    "SSIS",\n    "ETL",\n    "SQL",\n    "Test Driven Development",\n    "Entity Framework",\n    "ORM",\n    "Microsoft Azure",\n    "Azure Logic Apps",\n    "Azure Functions"\n  ]\n</ideal_output>\n</example>\n<example>\n<existing-technologies>\nReact\nNode.js\nJavaScript\nSQL\nNext.js\nNx\nJava\nAWS\nREST APIs\nDevOps\nData Pipelines\n.NET\nC\nT-SQL\nMicrosoft Azure\nAzure Functions\nAzure Logic Apps\nETL\nTest Driven Development\nBehavioral Driven Development\nEntity Framework\nORM\nSSIS\nPostgreSQL\nAWS Lambda\nAWS Cognito\nAWS CloudWatch\nAWS Aurora\nAWS Bedrock\nAWS VPC\nAWS CloudFormation\nAngular\nPython\nGitHub Actions\nTest Automation\nTest Data Management\nPytest\nUnit Testing\nIntegration Testing\nSystem Testing\nPerformance Testing\nAPI Testing\nMSTest\nMocks\nVisual Studio\nVS Code\nTypeScript\nMVC\nCA Autosys\nMachine Learning\nLow Code\nAppian\nBusiness Process Automation\nRedux\nObject Oriented\nCSS\nDocker\nKubernetes\nGraphQL\nOptimizely\nContent Management Systems\nDomain Data Modeling\nLinux RPM Packaging\nShell Scripting\nLinux\nVirtual Machines\nContainers\nCyber Security\nSUSE Linux\nReact Native\nSystem Architecture\nASP.NET\nPower Platform\nDataverse\nDynamics\nPower BI\nPower Apps\nPower Automate\nSSRS\nOAuth 2.0\nAlteryx\nPowerShell\nSharePoint\nAzure DevOps\nOracle ERP\nVue\nAndroid\nSDKs\nOpenCL\nKernel Programming\nGPU Algorithm Design\nGPU Algorithm Testing\nDesign Patterns\nCUDA\nMagnolia CMS\nAdobe Experience Manager\nPostCSS\nSASS\nTailwind\nSpring Boot\nSpring\nJava EE\nInfrastructure as Code\nData Distribution Services (DDS)\nNetwork Sniffing\nService Oriented Architecture\nMicroservices\nStored Procedures\nIndexes\nTriggers\nGPU Programming\nAlgorithms\nAuthentication\nAuthorization\nCaching\nEncryption\nResponsive Design\nDomain Driven Design\nGCP\n</existing-technologies>\n<jobDescription>\nSoftware Engineer\\n\\nPosition:  Software Developer – C++ with Linux package creation required\\n\\nDuration: 12 months with opportunities for multiple extensions\\n\\n \\n\\nRoles and Responsibilities:\\n\\nBe responsible for defining, developing, and evolving software in a fast-paced agile scrum team, and agile development environment using the latest software development technologies and infrastructure.\\nWork with a cross functional team of engineers, scientists, and applications experts to translate high level MR compute needs that demand new computer capabilities into component-level requirements.\\nPlan and perform integration activities at component, sub-system, and system levels.  Document designs and verification activities; perform component & subsystem level verifications, participate in system level verifications and validations as necessary.\\nKeep abreast of Linux Service Pack releases, recommend adoption and do the adoption.\\nAssist in hardware selection for EoL replacement of alternative modules and for Next Gen HW\\nBe interface to root case issues with OS partners (SUSE), FW and HW teams.\\nFacilitate performance issues triage and resolution when spanning HW, FW and OS modules or settings.\\nAugment OS RPM packaging and install scripts.\\nDo Diags development – augmenting what comes from IHV and/or ISV.\\nImplementing Security and Serviceability changes at Compute layer.\\nTest automation development for Diags/ SW packages/Linux SP releases.\\nUnderstand research and industry trends in Compute, containers, virtual machines, cyber security, Linux OS and packing technologies.\\nWork with product line leaders and architects to develop multi generation software technology plans.\\nDrive increased efficiency across the teams, eliminating duplication, leveraging product and technology reuse.\\nSupport process improvements which guide the development, sustaining & support activities\\nUnderstand performance parameters and assess application performance.\\nProactively share information across the team, to the right audience with the appropriate level of detail and timeliness\n</jobDescription>\n<ideal_output>\n[\n    "C++",\n    "Linux RPM Packaging",\n    "Shell Scripting",\n    "Linux",\n    "Test Automation",\n    "Virtual Machines",\n    "Containers",\n    "Cyber Security",\n    "SUSE Linux"\n  ]\n</ideal_output>\n</example>\n<example>\n<existing-technologies>\nReact\nNode.js\nJavaScript\nSQL\nNext.js\nNx\nJava\nAWS\nREST APIs\nDevOps\nData Pipelines\n.NET\nC\nT-SQL\nMicrosoft Azure\nAzure Functions\nAzure Logic Apps\nETL\nTest Driven Development\nBehavioral Driven Development\nEntity Framework\nORM\nSSIS\nPostgreSQL\nAWS Lambda\nAWS Cognito\nAWS CloudWatch\nAWS Aurora\nAWS Bedrock\nAWS VPC\nAWS CloudFormation\nAngular\nPython\nGitHub Actions\nTest Automation\nTest Data Management\nPytest\nUnit Testing\nIntegration Testing\nSystem Testing\nPerformance Testing\nAPI Testing\nMSTest\nMocks\nVisual Studio\nVS Code\nTypeScript\nMVC\nCA Autosys\nMachine Learning\nLow Code\nAppian\nBusiness Process Automation\nRedux\nObject Oriented\nCSS\nDocker\nKubernetes\nGraphQL\nOptimizely\nContent Management Systems\nDomain Data Modeling\nLinux RPM Packaging\nShell Scripting\nLinux\nVirtual Machines\nContainers\nCyber Security\nSUSE Linux\nReact Native\nSystem Architecture\nASP.NET\nPower Platform\nDataverse\nDynamics\nPower BI\nPower Apps\nPower Automate\nSSRS\nOAuth 2.0\nAlteryx\nPowerShell\nSharePoint\nAzure DevOps\nOracle ERP\nVue\nAndroid\nSDKs\nOpenCL\nKernel Programming\nGPU Algorithm Design\nGPU Algorithm Testing\nDesign Patterns\nCUDA\nMagnolia CMS\nAdobe Experience Manager\nPostCSS\nSASS\nTailwind\nSpring Boot\nSpring\nJava EE\nInfrastructure as Code\nData Distribution Services (DDS)\nNetwork Sniffing\nService Oriented Architecture\nMicroservices\nStored Procedures\nIndexes\nTriggers\nGPU Programming\nAlgorithms\nAuthentication\nAuthorization\nCaching\nEncryption\nResponsive Design\nDomain Driven Design\nGCP\n</existing-technologies>\n<jobDescription>\nWhat makes this role unique: The type of work we have ranges from doing greenfield development, to support and lifecycle. This work includes API development, UI development and back-end application development for overnight processing. Projects vary, but currently we are working on tax document processing, automation of trade processing, and development of services to support applications being built for branch offices.  \\n\\n Candidate Profile: \\n\\n.NET Generalist with strong preference for experience writing/using web services. See above for more detail \\nPreferred: C#, T-SQL, Web API, JavaScript \\nA plus to have: SSIS, MVC, CA Autosys, Azure development, Angular \\nStrong SQL skills \\nExperience with Test Driven Development \\nExposure to Entity Framework or other ORM \\n \\n\\nQualities Needed: \\n\\nGood communicator who wants to work in a team environment, comfortable performing pair programming \\nAnalytical – not afraid to dive into complex code and data to troubleshoot issues \\nCreative problem solver who is automation focused – we’re looking to not have recurring work come back to us, but to better automate or teach/train users for self service \\nMotivated by small quick wins and process improvement \\nComfortable working in an agile environment.? Prefer experience working in agile \\n \\n\\nBenefits to being placed at company: \\n\\nLong-term contract with potential for extended renewals \\nTeam focused environment.? We treat our consultants as part of the team. \\nRich developer community with lunch & learns on best practices. ?Focus on software craftsmanship. \\nA DevOps culture. We use automated deployment and are constantly looking to improve in the DevOps space. Our DBAs/App Admins are part of our collaboration. \\nAgile/lean practices with diversity of projects \n</jobDescription>\n<ideal_output>\n[\n    ".NET",\n    "C#",\n    "T-SQL",\n    "SQL",\n    "JavaScript",\n    "SSIS",\n    "MVC",\n    "CA Autosys",\n    "Microsoft Azure",\n    "Angular",\n    "Test Driven Development",\n    "Entity Framework",\n    "REST APIs",\n    "ORM",\n    "DevOps"\n  ]\n</ideal_output>\n</example>\n<example>\n<existing-technologies>\nReact\nNode.js\nJavaScript\nSQL\nNext.js\nNx\nJava\nAWS\nREST APIs\nDevOps\nData Pipelines\n.NET\nC\nT-SQL\nMicrosoft Azure\nAzure Functions\nAzure Logic Apps\nETL\nTest Driven Development\nBehavioral Driven Development\nEntity Framework\nORM\nSSIS\nPostgreSQL\nAWS Lambda\nAWS Cognito\nAWS CloudWatch\nAWS Aurora\nAWS Bedrock\nAWS VPC\nAWS CloudFormation\nAngular\nPython\nGitHub Actions\nTest Automation\nTest Data Management\nPytest\nUnit Testing\nIntegration Testing\nSystem Testing\nPerformance Testing\nAPI Testing\nMSTest\nMocks\nVisual Studio\nVS Code\nTypeScript\nMVC\nCA Autosys\nMachine Learning\nLow Code\nAppian\nBusiness Process Automation\nRedux\nObject Oriented\nCSS\nDocker\nKubernetes\nGraphQL\nOptimizely\nContent Management Systems\nDomain Data Modeling\nLinux RPM Packaging\nShell Scripting\nLinux\nVirtual Machines\nContainers\nCyber Security\nSUSE Linux\nReact Native\nSystem Architecture\nASP.NET\nPower Platform\nDataverse\nDynamics\nPower BI\nPower Apps\nPower Automate\nSSRS\nOAuth 2.0\nAlteryx\nPowerShell\nSharePoint\nAzure DevOps\nOracle ERP\nVue\nAndroid\nSDKs\nOpenCL\nKernel Programming\nGPU Algorithm Design\nGPU Algorithm Testing\nDesign Patterns\nCUDA\nMagnolia CMS\nAdobe Experience Manager\nPostCSS\nSASS\nTailwind\nSpring Boot\nSpring\nJava EE\nInfrastructure as Code\nData Distribution Services (DDS)\nNetwork Sniffing\nService Oriented Architecture\nMicroservices\nStored Procedures\nIndexes\nTriggers\nGPU Programming\nAlgorithms\nAuthentication\nAuthorization\nCaching\nEncryption\nResponsive Design\nDomain Driven Design\nGCP\n</existing-technologies>\n<jobDescription>\nJob Description - Designs, develops and tests program units; works on SPA application in a micro-app architecture environment; participates in implementations of new systems or modifications to existing systems to meet Information Systems and client business requirements. Prepares and updates documentation as appropriate. Includes proficiency developing, debugging and optimizing web applications. Familiar with web standards, best practices and current trends.\\n\\nKey skills (Must have):\\n\\nRESTS APIs, JavaScript, ReactJS ,Node.js, Jest, Java, Python.\\nSignificant javascript development experience within a major framework: Vue, Angular 2+, React.\\nExperience with SASS Unit testing with Jest, Mocha, Tape or other JS testing framework.\\nAwareness of DevOps and Agile principles\\nFamiliarity with CI/CD and how to apply it with services such as Gitlab CI, Jenkins, CodePipeline, or Circle CI\\nFamiliarity with Infrastructure-as-Code,such as Terraform or CloudFormation\\nFamiliarity how public cloud services work and how different cloud services work together\\nFamiliarity with Docker and how containers work and can be used\\nFamiliarity with Kubernetes and other container orchestration systems\\nMinimum of 3 years of experience required due to job requirements. (3-5 recommended)\\n\n</jobDescription>\n<ideal_output>\n[\n    "REST APIs",\n    "JavaScript",\n    "React",\n    "Node.js",\n    "Jest",\n    "Java",\n    "Python",\n    "Vue",\n    "Angular",\n    "Unit Testing",\n    "SASS",\n    "Mocha",\n    "Tape",\n    "DevOps",\n    "GitLab CI",\n    "Jenkins",\n    "AWS CodePipeline",\n    "Circle CI",\n    "Infrastructure as Code",\n    "Terraform",\n    "AWS CloudFormation",\n    "Docker",\n    "Kubernetes"\n  ]\n</ideal_output>\n</example>\n<example>\n<existing-technologies>\nReact\nNode.js\nJavaScript\nSQL\nNext.js\nNx\nJava\nAWS\nREST APIs\nDevOps\nData Pipelines\n.NET\nC\nT-SQL\nMicrosoft Azure\nAzure Functions\nAzure Logic Apps\nETL\nTest Driven Development\nBehavioral Driven Development\nEntity Framework\nORM\nSSIS\nPostgreSQL\nAWS Lambda\nAWS Cognito\nAWS CloudWatch\nAWS Aurora\nAWS Bedrock\nAWS VPC\nAWS CloudFormation\nAngular\nPython\nGitHub Actions\nTest Automation\nTest Data Management\nPytest\nUnit Testing\nIntegration Testing\nSystem Testing\nPerformance Testing\nAPI Testing\nMSTest\nMocks\nVisual Studio\nVS Code\nTypeScript\nMVC\nCA Autosys\nMachine Learning\nLow Code\nAppian\nBusiness Process Automation\nRedux\nObject Oriented\nCSS\nDocker\nKubernetes\nGraphQL\nOptimizely\nContent Management Systems\nDomain Data Modeling\nLinux RPM Packaging\nShell Scripting\nLinux\nVirtual Machines\nContainers\nCyber Security\nSUSE Linux\nReact Native\nSystem Architecture\nASP.NET\nPower Platform\nDataverse\nDynamics\nPower BI\nPower Apps\nPower Automate\nSSRS\nOAuth 2.0\nAlteryx\nPowerShell\nSharePoint\nAzure DevOps\nOracle ERP\nVue\nAndroid\nSDKs\nOpenCL\nKernel Programming\nGPU Algorithm Design\nGPU Algorithm Testing\nDesign Patterns\nCUDA\nMagnolia CMS\nAdobe Experience Manager\nPostCSS\nSASS\nTailwind\nSpring Boot\nSpring\nJava EE\nInfrastructure as Code\nData Distribution Services (DDS)\nNetwork Sniffing\nService Oriented Architecture\nMicroservices\nStored Procedures\nIndexes\nTriggers\nGPU Programming\nAlgorithms\nAuthentication\nAuthorization\nCaching\nEncryption\nResponsive Design\nDomain Driven Design\nGCP\n</existing-technologies>\n<jobDescription>\nTitle:    Business Process Engineer\n\nStart: asap - June, 2025\n\nLocation:    Milwaukee – Hybrid\n\nThe main skills we’ll be assessing are:  Software development, Business Process Automation, Low Code, Appian, Python, Financial Services experience.\n\nPosition Overview:\n\nThe successful Business Process Engineer uses analytical skills to model business processes and unlock efficiencies within those processes.  He or she will define and create a workflow application in a way that meets the end user’s needs.  The Engineer will use workflow software to create process models, build user interfaces and forms, implement business rules and enforce compliance gates.  He or she will provide training and support to the Business Unit, prioritize change requests and implement enhancements.  Other responsibilities include managing the maintenance of forms and workflows in the production environment, troubleshooting technical support issues and acting as a liaison with the software vendor.\n\nESSENTIAL DUTIES AND RESPONSIBILITIES:\n\nProject Execution:\n\nParticipate in development and implementation of automated process workflow solutions, using a variety of technologies (Java, JavaScript, C#, SSIS) to provide accurate and creative solutions to client problems\nRecommend and implement solutions to client problems that enhance user experiences (UX)\nAbility to extract and interpret data to support analytical approach\nTroubleshoot and triage issues within system and solutions and escalating where appropriate\nQuality Assurance:\n\nFollow general coding standards and best practices to ensure solutions meet appropriate integrity levels\nPerform testing through manual and/or automated methods to ensure solutions meet functional requirements\nLocate adequate data to facilitate testing scenarios\nRelationship Management:\n\nDevelop partnerships with team, functional peers, sponsors, and multiple stakeholders\nTailor communication appropriately for technical and non-technical audiences\nCollaborate with vendor teams on integration and support of platform\nContinuous Improvement:\n\nIdentify and implement continuous improvement and innovation opportunities within current technologies\n \nEDUCATION / EXPERIENCE / QUALIFICATIONS\n\nBS in Software Engineering, Computer Science, Computer Engineering, Management Information Systems, or Information Technology Management is preferred\n1-2 years of relevant software development experience in an enterprise, internship or academic environment combined with a proven track record of delivery quality solutions on time.\nStrong analytical skills with the ability to perform complex problem solving.\nExcellent interpersonal, negotiation and influencing skills leading to trusting relationships with peers, business partners and their leadership team.\nDemonstrated relationship builder; able to establish both internal and external working relationships in order to identify and implement strategies for business growth.\nAble to implement change effectively and collaboratively in a team environment and with associates at all levels and in all areas of the firm.\nWorking Knowledge of Object-Oriented programming (Java preferred), Web Technologies and Architecture, IT Infrastructure and Database Operations.\n \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nSenior Software Engineer\n\nWe are a team of 10 Product and Engineering professionals who deliver an improved digital employee experience through an innovative and integrated home office intranet.\n\nJob Description -\n\nOur mission is to build a fabulous and efficient experience for our Workplace Portal environments. We are looking for dynamic and talented Senior software engineer to join Workplace Portals Engineering focusing on .NET Core and JavaScript development and application support. You will be working on a high impact modernization effort building an application that delivers value to our field force.  The ideal candidate is full-stack, comfortable working on front-end apps as well as their backend.\n\nPrimary Duties & Responsibilities\n\nDevelop and deploy applications following the software development life cycle\nTroubleshoot and resolve technical issues that may arise during the development and deployment of software projects\nConduct thorough code reviews to ensure compliance with established coding standards and best practices\nHas an evolving understanding of system-wide architectural challenges\nContribute to technical discussions and decision-making processes within the team\nMay take on a mentoring role and provide guidance and support to junior technical talent\nRecommend efficiencies to current established development and continuous integration practices\n \n\nQualifications\n\nBachelor’s Degree or equivalent experience\n4+ years professional application development experience\n4+ years of experience working with modern engineering tools, languages and practices\nProven track record of delivering significant and impactful technology solutions\n2+ years’ professional experience with .NET Core development and/or Java development\n2+ years’ professional experience with a JavaScript framework (React and NextJS), ES6, NodeJS, Redux, RESTful services\nExperience working with HTML and CSS\nExperience with cloud-based development, including PaaS and SaaS, and Docker and/or Kubernetes\nExposure to and understanding of CICD pipelines\nExposure/Understanding of automated testing concepts: unit testing and Test-Driven Development\nAbility to communicate effectively to both technical and non-technical audiences\nUnderstanding of design patterns and architecture\n \n\nNice to Haves:\n\nExperience developing in a Content Management System (CMS), specifically Optimizely\nHave a passion for operational excellence, problem-solving, and ownership in accomplishing challenging goals\n\n\nWhat\'s the role? \n\n \n\nCollaborate with an engineering Scrum team, providing purpose, motivation, and alignment with objectives established by senior leadership. Ensures a high standard of reliability, performance and production stability in applications and services owned and supported by the team. Contributes to refinement of features allocated to the team, as well as solution definition and decomposition into stories for the team. Remains focused in order to overcome challenges and ensure features are completed and deployed by dates committed to in quarterly Program Increment (PI) planning. Finds opportunities for continuous improvement and owns initiatives that help the team improve. Engages and helps establish an inclusive culture within the team, models what we value and behaviors, and encourages collaboration and respect for diverse perspectives. Open to mentoring and coaching opportunities in technical and soft skills, with a hunger to grow. Qualifications Bachelor’s Degree or equivalent experience 3-5 years of professional software development experience required 3-5+ years of experience working with modern software engineering tools such as Kubernetes and AWS Lambda Experience with Javascript (React, GQL, Express) Proficient in practices such as Domain Data Modeling and API-first design. Proven track record of optimally crafting and delivering significant and impactful technology solutions. Capable of effectively communicating with product, engineering, and business partners, including proven ability to communicate to both technical and non-technical audiences in varying forms and levels of detail.\n\n \n\n</jobDescription>\n<ideal_output>\n[\n    "Low Code",\n    "Appian",\n    "Python",\n    "Business Process Automation",\n    "Java",\n    "JavaScript",\n    "React",\n    "Redux",\n    "Next.js",\n    "Node.js",\n    "REST APIs",\n    ".NET",\n    "C#",\n    "SSIS",\n    "Object Oriented",\n    "SQL",\n    "CSS",\n    "Docker",\n    "Kubernetes",\n    "AWS",\n    "AWS Lambda",\n    "Test Automation",\n    "Unit Testing",\n    "Test Driven Development",\n    "GraphQL",\n    "Optimizely",\n    "Content Management Systems",\n    "Domain Data Modeling"\n  ]\n</ideal_output>\n</example>\n<example>\n<existing-technologies>\nReact\nNode.js\nJavaScript\nSQL\nNext.js\nNx\nJava\nAWS\nREST APIs\nDevOps\nData Pipelines\n.NET\nC\nT-SQL\nMicrosoft Azure\nAzure Functions\nAzure Logic Apps\nETL\nTest Driven Development\nBehavioral Driven Development\nEntity Framework\nORM\nSSIS\nPostgreSQL\nAWS Lambda\nAWS Cognito\nAWS CloudWatch\nAWS Aurora\nAWS Bedrock\nAWS VPC\nAWS CloudFormation\nAngular\nPython\nGitHub Actions\nTest Automation\nTest Data Management\nPytest\nUnit Testing\nIntegration Testing\nSystem Testing\nPerformance Testing\nAPI Testing\nMSTest\nMocks\nVisual Studio\nVS Code\nTypeScript\nMVC\nCA Autosys\nMachine Learning\nLow Code\nAppian\nBusiness Process Automation\nRedux\nObject Oriented\nCSS\nDocker\nKubernetes\nGraphQL\nOptimizely\nContent Management Systems\nDomain Data Modeling\nLinux RPM Packaging\nShell Scripting\nLinux\nVirtual Machines\nContainers\nCyber Security\nSUSE Linux\nReact Native\nSystem Architecture\nASP.NET\nPower Platform\nDataverse\nDynamics\nPower BI\nPower Apps\nPower Automate\nSSRS\nOAuth 2.0\nAlteryx\nPowerShell\nSharePoint\nAzure DevOps\nOracle ERP\nVue\nAndroid\nSDKs\nOpenCL\nKernel Programming\nGPU Algorithm Design\nGPU Algorithm Testing\nDesign Patterns\nCUDA\nMagnolia CMS\nAdobe Experience Manager\nPostCSS\nSASS\nTailwind\nSpring Boot\nSpring\nJava EE\nInfrastructure as Code\nData Distribution Services (DDS)\nNetwork Sniffing\nService Oriented Architecture\nMicroservices\nStored Procedures\nIndexes\nTriggers\nGPU Programming\nAlgorithms\nAuthentication\nAuthorization\nCaching\nEncryption\nResponsive Design\nDomain Driven Design\nGCP\n</existing-technologies>\n<jobDescription>\nFirst role:  Software Developer - AI\\n\\n12+ month contract (Starting to interview & hire in January)\\n\\nRemote\\n\\nOur client is looking for 1-2 developers who can help them push some of our AI initiatives forward. \\n\\nRequired Skills\\n\\nC# - .NET 8+\\nPostgreSQL with Entity Framework Core\\nExperience with GitHub\\nExperience with AWS (Lambda, Cognito, CloudWatch, Aurora, Bedrock, VPC)\\n \\n\\nNice to have\\n\\nAngular 18+\\nPython 3.12+\\n \\n\\nSecond role:  Software Test Developer:\\n Responsibilities\\n\\nWorking closely with developers to create and maintain tests across AI projects\\nCreate automated test pipelines in GitHub\\nCreate and design dedicated testing projects (in C# or Python)\\nAid in the curation of test data\\nCreate unit/api tests for different system components\\nCreate integration tests between different system components\\nCreate automated performance tests for system components\\nUpdate existing components to make them more testable\\nMonitor, report on and increase test coverage across the codebase\\nParticipate in team sprints, standups, and other agile activities\\nTech Experience\\nRequired\\nC# - .NET 8+ (MSTest unit testing framework)\\nPython 3.12+ (Pytest unit testing framework)\\nMocking of classes, databases, services\\nGitHub Actions\\nExperience with a variety of testing frameworks\\nExperience in testing methodologies of system component functionality and performance\\nExperience with Visual Studio and VS Code\\nRecommended\\nExperience with AWS (Lambda, Cognito, CloudWatch, Aurora, Bedrock, VPC)\\nExperience with Angular 18+ & Typescript\\n \\n\\nTo be clear, this wouldn’t be a traditional role of “automating QA test cases” – it would be working much more closely with the development team to create tests at the code level.\n</jobDescription>\n<ideal_output>\n[\n    "C#",\n    ".NET",\n    "MSTest",\n    "PostgreSQL",\n    "SQL",\n    "Entity Framework",\n    "AWS",\n    "AWS Lambda",\n    "AWS Cognito",\n    "AWS CloudWatch",\n    "AWS Aurora",\n    "AWS Bedrock",\n    "AWS VPC",\n    "Angular",\n    "Python",\n    "Pytest",\n    "Unit Testing",\n    "Integration Testing",\n    "Performance Testing",\n    "Test Automation",\n    "Test Data Management",\n    "API Testing",\n    "Mocks",\n    "GitHub Actions",\n    "Visual Studio",\n    "VS Code",\n    "JavaScript",\n    "TypeScript"\n  ]\n</ideal_output>\n</example>\n</examples>\n\n',
            cache_control: useCache
              ? {
                  type: "ephemeral",
                }
              : undefined,
          },
          {
            type: "text",
            text: prompt,
          },
        ],
      },
    ],
  });

  if (promptOptions.logMessage ?? false) {
    console.log(msg);
  }

  return extractJsonFromAnthropicResponse(msg);
};

const buildUserPrompt = (jobDescription, techsWithQuestionsList) => {
  return `
You are an expert in software development recruitment, tasked with analyzing job descriptions to identify required technologies and software development concepts which will be used to screen candidates. Your goal is to create a comprehensive yet focused list of technologies and concepts that a qualified candidate should know for the given position.

Here is a list of standardized technology names and concepts to use when possible:
<existing-technologies>
${buildExistingTechnologiesList(techsWithQuestionsList)}.
</existing-technologies>


Please analyze the following job description:

<job_description>
${jobDescription}
</job_description>

Your task is to extract a list of technologies and concepts that candidates should know to be qualified for this job. Follow these guidelines:

1. Standardize technology names using the provided list when possible. However, do not use this list as a filter. It is important that if a specific library, technoglogy, or framework is mentioned in the job description, be sure to include it in the final list even if it is not part of the standardized list.
2. If a specific subset of an existing technology is added to the final list, include both the subset and the superset (e.g., "Spring Boot" and "Spring").
3. If a database product is mentioned (e.g. "MySQL", "PostgreSQL", etc.), always include SQL in the final list even if it is not mentioned in the job description.
4. If the job description is too generic (e.g., "full stack developer", "full stack .NET developer", "full stack Java developer", etc.), include main technologies needed for full stack development, focusing on technology families like Java or .NET if possible. Include both Angular and React if no SPA framework is mentioned. Also always include REST APIs and CSS in the final list.
5. Include technologies mentioned in recruiter notes, even if not in the main job description(s).
6. Always add JavaScript if TypeScript is added to the final list.
7. Always add Spring if Spring Boot is added to the final list.
8. Exclude non-technical terms like industry domains (e.g., "healthcare", "insurance", "banking").
9. Treat C#, C++, and C as distinct technologies. Do not conflate them or translate one to another.
10. Make sure to include mobile phone app development and the specific mobile phone operating systems if in the job description.
11. Group all flavors of Linux and Unix under just Linux.
12. Make sure to include build and system configuration tools such as maven, gradle, cmake, ansible, etc.
13. Make sure to include specific third party libraries called out in the job descriptions.
14. Make sure to include test automation if the job description includes it or a variation like automated tests.
15. If a technology is implied by the job description, only include it if it is in the standardized list.
16. If the job description mentions both ORM and one or more specific ORM libraries like Hibernate, Entity Framework, MyBatis, etc., only include the specific libraries, do not include ORM. Include ORM if there is no mention of specific ORM libraries.
17. If the job description mentions both cloud programming experience and one or more specific cloud provider like AWS, Azure, GCP, etc., only include the specific cloud providers, do no include a technology entry for cloud. Only include cloud as a technology entry if there is no mention of specific cloud providers.
18. If the job description mentions both containers and/or Kubernetes and Docker, only include Kubernetes and/or Docker, do no include a technology entry for containers. Only include containers as a technology entry if there is no mention of Kubernetes and/or Docker.
19. Standardize object oriented design, object-oriented concepts, object oriented programming all to "Object Oriented Programming (OOP)"
20. If Angular or React is added to the final list but not JavaScript, always include JavaScript as it is implied.
21. If Angular is mentioned in the job description, always include TypeScript in the final list.
22. If the job description mentions architecture, architecture design, systems design, etc. standardize to 'System Architecture'.
23. If database concepts like data modeling, triggers, indexes, and stored procedures are mentioned in the job description, they are important and should be included.
24. When standardizing pay close attention to the usage of the '-' character. The standardized list does not use the '-'. For example, object-oriented should standardize to Object Oriented Programming (OOP).
25. Be sure to include well recoginzed design patterns the job description calls out. E.g. event driven architecture, feature flags, data structures, etc.


Before providing the final list, wrap your analysis inside <technology_extraction> tags:

1. Quote and number each relevant part of the job description that mentions technologies.
2. Categorize technologies and concepts as "Explicitly Mentioned" or "Implied".
3. For implied technologies and concepts, explain your reasoning for including them.
4. Check each technology and concept against the standardized list and note any matches.

It's OK for this section to be quite long.
After your analysis, provide the final list as a JSON array of strings, each representing a required technology or concept.
  `;
};

const buildExistingTechnologiesList = (techsWithQuestionsList) => {
  let list = "";
  for (const t of techsWithQuestionsList) {
    list += `${t}\n`;
  }
  return list;
};

const extractJsonFromAnthropicResponse = (response) => {
  const textResponse = response.content[0].text;
  const startIndex = textResponse.indexOf("[");
  const endIndex = textResponse.lastIndexOf("]") + 1;
  const jsonString = textResponse.substring(startIndex, endIndex);
  const parsedTechnologies = JSON.parse(jsonString);
  return filterTechnologies(parsedTechnologies);
};

module.exports = getTagsFromJobDescription;
